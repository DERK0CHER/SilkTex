#!@PYTHON@
# -*- coding: utf-8 -*-

# silktex - LaTeX editor with live preview
# @VERSION@

import sys
import os
import signal
import locale
import gettext

# Enable Ctrl+C to work properly
signal.signal(signal.SIGINT, signal.SIG_DFL)

# Configure paths
pkgdatadir = '@pkgdatadir@'
moduledir = '@moduledir@'
localedir = '@LOCALEDIR@'

# Setup Python path
sys.path.insert(1, pkgdatadir)
sys.path.insert(1, moduledir)

# Set up internationalization
if hasattr(locale, 'bindtextdomain'):
    locale.bindtextdomain('silktex', localedir)
    locale.textdomain('silktex')

if hasattr(gettext, 'bindtextdomain'):
    gettext.bindtextdomain('silktex', localedir)
    gettext.textdomain('silktex')

# Import and run
if __name__ == '__main__':
    # Fix the Python path
    if pkgdatadir not in sys.path:
        sys.path.insert(0, pkgdatadir)
    
    # Add parent of moduledir to path to help locate modules
    parent_dir = os.path.dirname(moduledir)
    if parent_dir not in sys.path:
        sys.path.insert(0, parent_dir)
    
    # Try direct execution of main.py if it exists
    main_path = os.path.join(pkgdatadir, 'main.py')
    if os.path.exists(main_path):
        try:
            # Simply execute the main.py file directly
            with open(main_path) as f:
                print(f"Executing {main_path} directly")
                code = compile(f.read(), main_path, 'exec')
                globals_dict = {'__file__': main_path}
                exec(code, globals_dict)
                if 'main' in globals_dict:
                    sys.exit(globals_dict['main']('@VERSION@'))
        except Exception as e:
            print(f"Error executing main.py directly: {e}")
    
    # If direct execution failed, try proper imports
    try:
        print("Attempting imports...")
        # Try various import patterns
        try:
            # Try to import directly
            import main
            print("Imported main directly")
            sys.exit(main.main('@VERSION@'))
        except ImportError:
            # Try from a package
            try:
                from silktex import main
                print("Imported main from silktex package")
                sys.exit(main.main('@VERSION@'))
            except ImportError:
                # Try importing from src
                import src.main as main_module
                print("Imported main from src package")
                sys.exit(main_module.main('@VERSION@'))
    except ImportError as e:
        print(f"Error: Could not import SilkTex modules: {e}")
        print(f"Python path: {sys.path}")
        
        # Final fallback: print debug info and exit
        print("\nDEBUG INFORMATION:")
        print(f"Module directory: {moduledir}")
        print(f"Package data directory: {pkgdatadir}")
        print("\nDIRECTORY CONTENTS:")
        if os.path.exists(pkgdatadir):
            print(f"Contents of {pkgdatadir}:")
            for item in os.listdir(pkgdatadir):
                print(f"  - {item}")
        else:
            print(f"{pkgdatadir} does not exist")
        
        if os.path.exists(moduledir):
            print(f"Contents of {moduledir}:")
            for item in os.listdir(moduledir):
                print(f"  - {item}")
        else:
            print(f"{moduledir} does not exist")
        
        sys.exit(1)
