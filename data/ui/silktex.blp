using Gtk 4.0;

template SilkTexWindow : Gtk.ApplicationWindow {
  title: _("SilkTex - LaTeX Editor");
  default-width: 800;
  default-height: 600;

  [titlebar]
  HeaderBar header_bar {
    [end]
    MenuButton menu_button {
      icon-name: "open-menu-symbolic";
      menu-model: app_menu;
    }
  }

  Box main_box {
    orientation: vertical;

    // Toolbar
    Box toolbar_box {
      styles ["toolbar"]
      visible: bind template.show_toolbar;

      // Common editing buttons
      Button tool_new {
        icon-name: "document-new-symbolic";
        tooltip-text: _("New");
        action-name: "win.new";
      }

      Button tool_open {
        icon-name: "document-open-symbolic";
        tooltip-text: _("Open");
        action-name: "win.open";
      }

      Button tool_save {
        icon-name: "document-save-symbolic";
        tooltip-text: _("Save");
        action-name: "win.save";
      }

      Separator {}

      // Text formatting buttons
      Button tool_bold {
        icon-name: "format-text-bold-symbolic";
        action-name: "win.format-bold";
      }

      Button tool_italic {
        icon-name: "format-text-italic-symbolic";
        action-name: "win.format-italic";
      }

      Button tool_underline {
        icon-name: "format-text-underline-symbolic";
        action-name: "win.format-underline";
      }

      Separator {}

      // Alignment buttons
      Button tool_left {
        icon-name: "format-justify-left-symbolic";
        action-name: "win.align-left";
      }

      Button tool_center {
        icon-name: "format-justify-center-symbolic";
        action-name: "win.align-center";
      }

      Button tool_right {
        icon-name: "format-justify-right-symbolic";
        action-name: "win.align-right";
      }

      Separator {}

      Box {
        hexpand: true;
      }
    }

    // Main content panels
    Paned hpaned {
      // Editor side
      Box editor_box {
        orientation: vertical;

        Notebook tab_notebook {
          scrollable: true;
          show-border: false;
          notify::switch-page => on_tab_notebook_switch_page();
        }

        Box importers {
          orientation: vertical;

          Box import_panel {}

          Box import_toolbar {
            styles ["toolbar"]

            Button imp_minimize {
              label: "  ";
              clicked => on_imp_minimize_clicked();
            }

            Button imp_panel_image {
              label: _("Image");
              clicked => on_imp_panel_image_clicked();
            }

            Button imp_panel_table {
              label: _("Table");
              clicked => on_imp_panel_table_clicked();
            }

            Button imp_panel_matrix {
              label: _("Matrix");
              clicked => on_imp_panel_matrix_clicked();
            }

            Button imp_panel_biblio {
              label: _("Bibliography");
              clicked => on_imp_panel_biblio_clicked();
            }
          }
        }
      }

      // Preview side
      Box preview_box {
        visible: bind template.show_rightpane;

        Notebook right_notebook {
          notify::switch-page => on_right_notebook_switch_page();

          [tab]
          Label previewgui_label {
            label: _("Preview Pane");
          }

          ScrolledWindow preview_scrollw {
            DrawingArea preview_draw {}
          }

          Box preview_toolbar {
            styles ["toolbar"]

            Button page_prev {
              label: _("Previous");
              sensitive: false;
            }

            Button page_next {
              label: _("Next");
              sensitive: false;
            }

            Separator {}

            Entry page_input {
              placeholder-text: "0";
              width-chars: 6;
            }

            Label page_label {
              label: _("of 0");
            }

            Separator {}

            ComboBoxText combo_preview_size {
              active: 2;
            }

            Separator {
              hexpand: true;
            }

            ToggleButton preview_pause {
              icon-name: "media-playback-pause-symbolic";
              toggled => on_preview_pause_toggled();
            }
          }
        }
      }
    }

    // Statusbar
    Box statusbar {
      visible: bind template.show_statusbar;
      styles ["statusbar"]

      Label status_label {
        hexpand: true;
        halign: start;
        label: "";
      }
    }
  }
}

menu app_menu {
  section {
    item {
      label: _("New");
      action: "win.new";
    }
    item {
      label: _("New from Template");
      action: "win.new-from-template";
    }
    item {
      label: _("Open...");
      action: "win.open";
    }
  }

  section {
    item {
      label: _("Save");
      action: "win.save";
    }
    item {
      label: _("Save As...");
      action: "win.save-as";
    }
    item {
      label: _("Export to PDF");
      action: "win.export";
    }
  }

  section {
    submenu {
      label: _("Recent Files");

      section {
        item {
          label: _("Recent File 1");
          action: "win.recent";
          target: "1";
        }
        item {
          label: _("Recent File 2");
          action: "win.recent";
          target: "2";
        }
        item {
          label: _("Recent File 3");
          action: "win.recent";
          target: "3";
        }
        item {
          label: _("Recent File 4");
          action: "win.recent";
          target: "4";
        }
        item {
          label: _("Recent File 5");
          action: "win.recent";
          target: "5";
        }
      }
    }
  }

  section {
    item {
      label: _("Close");
      action: "win.close";
    }
    item {
      label: _("Quit");
      action: "win.quit";
    }
  }

  section {
    item {
      label: _("Undo");
      action: "win.undo";
    }
    item {
      label: _("Redo");
      action: "win.redo";
    }
  }

  section {
    item {
      label: _("Cut");
      action: "win.cut";
    }
    item {
      label: _("Copy");
      action: "win.copy";
    }
    item {
      label: _("Paste");
      action: "win.paste";
    }
    item {
      label: _("Delete");
      action: "win.delete";
    }
    item {
      label: _("Select All");
      action: "win.select-all";
    }
  }

  section {
    item {
      label: _("Preferences");
      action: "win.preferences";
    }
  }

  section {
    submenu {
      label: _("View");

      section {
        item {
          label: _("Statusbar");
          action: "win.show-statusbar";
        }
        item {
          label: _("Toolbar");
          action: "win.show-toolbar";
        }
        item {
          label: _("Right Pane");
          action: "win.show-rightpane";
        }
      }

      section {
        item {
          label: _("Fullscreen");
          action: "win.fullscreen";
        }
      }
    }
  }
}